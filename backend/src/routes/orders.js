const express = require('express');
const router = express.Router();
const orderController = require('../controllers/orderController');

// ‚úÖ ROTAS ATUALIZADAS PARA USAR CONTROLLER (compatibilidade 100%)
// CRIAR NOVO PEDIDO - COM VINCULA√á√ÉO AUTOM√ÅTICA
router.post('/', orderController.createOrder);

// LISTAR TODOS OS PEDIDOS
router.get('/', orderController.getOrders);

// üÜï ROTAS ESPEC√çFICAS PRIMEIRO (antes de /:id)
// üÜï NOVA ROTA - BUSCAR PEDIDOS POR TELEFONE DO CLIENTE
router.get('/by-phone/:phone', orderController.getOrdersByPhone);

// üÜï ROTAS KANBAN ESPEC√çFICAS
// Dados agrupados para Kanban
router.get('/kanban/data', orderController.getKanbanData);

// M√©tricas operacionais
router.get('/metrics/dashboard', orderController.getOrderMetrics);

// Alertas de pedidos
router.get('/alerts', orderController.getOrderAlerts);

// üÜï ROTAS COM PAR√ÇMETROS ESPEC√çFICOS (antes de /:id gen√©rico)
// Gest√£o de status avan√ßada
router.patch('/:id/status', orderController.updateOrderStatus);

// Sistema de observa√ß√µes
router.post('/:id/observations', orderController.addObservation);
router.get('/:id/observations', orderController.getObservations);

// Hist√≥rico do pedido
router.get('/:id/history', orderController.getOrderHistory);

// ‚úÖ ROTAS GEN√âRICAS POR √öLTIMO
// BUSCAR PEDIDO POR ID
router.get('/:id', orderController.getOrderById);

// ATUALIZAR PEDIDO
router.patch('/:id', orderController.updateOrder);

// DELETAR PEDIDO
router.delete('/:id', orderController.deleteOrder);

module.exports = router;
